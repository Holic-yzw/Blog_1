<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.holic.blog.mapper.BlogMapper">
    <resultMap id="blog" type="com.holic.blog.entity.Blog">
        <result column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="picUrl" jdbcType="VARCHAR" property="picUrl"/>
        <result column="source" jdbcType="VARCHAR" property="source"/>
        <result column="viewTimes" jdbcType="INTEGER" property="viewTimes"/>
        <result column="appreciation" jdbcType="VARCHAR" property="appreciation"/>
        <result column="copyright" jdbcType="VARCHAR" property="copyright"/>
        <result column="recommend" jdbcType="VARCHAR" property="recommend"/>
        <result column="published" jdbcType="VARCHAR" property="published"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="createDate" jdbcType="DATE" property="createDate"/>
        <result column="updateDate" jdbcType="DATE" property="updateDate"/>
        <result column="blogTypeId"  jdbcType="BIGINT"  property="blogTypeId"/>
        <result column="blogAdminId"  jdbcType="BIGINT" property="blogAdminId"/>
    </resultMap>
    <insert id="saveBlog" parameterType="com.holic.blog.entity.Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="title != null and title !=''">
              title,
          </if>
          <if test="content != null and content !=''">
              content,
          </if>
          <if test="picUrl != null and picUrl !=''">
              picUrl,
          </if>
          <if test="source != null and source != ''">
              source,
          </if>
          <if test="viewTimes != null and viewTimes !=''">
              viewTimes,
          </if>
          <if test="appreciation != null and appreciation != ''">
              appreciation,
          </if>
          <if test="copyright != null and copyright != ''">
              copyright,
          </if>
          <if test="recommend != null and recommend != ''">
              recommend,
          </if>
          <if test="published != null and published != ''">
              published,
          </if>
          <if test="comment != null and comment != ''">
              comment,
          </if>
          <if test="createDate != null and createDate != ''">
              createDate,
          </if>
          <if test="updateDate != null and updateDate != ''">
              updateDate,
          </if>
          <if test="blogTypeId != null and blogTypeId != ''">
              blogTypeId,
          </if>
          <if test="blogAdminId != null and blogAdminId != ''">
              blogAdminId,
          </if>
          <if test="description != null and description != ''">
              description,
          </if>
        </trim>
        <trim prefix=" values (" suffix=")" suffixOverrides=",">
            <if test="title != null and title !=''">
                #{title},
            </if>
            <if test="content != null and content !=''">
                #{content},
            </if>
            <if test="picUrl != null and picUrl !=''">
                #{picUrl},
            </if>
            <if test="source != null and source != ''">
                #{source},
            </if>
            <if test="viewTimes != null and viewTimes !=''">
                #{viewTimes},
            </if>
            <if test="appreciation != null and appreciation != ''">
                #{appreciation},
            </if>
            <if test="copyright != null and copyright != ''">
                #{copyright},
            </if>
            <if test="recommend != null and recommend != ''">
                #{recommend},
            </if>
            <if test="published != null and published != ''">
                #{published},
            </if>
            <if test="comment != null and comment != ''">
                #{comment},
            </if>
            <if test="createDate != null and createDate != ''">
                #{createDate},
            </if>
            <if test="updateDate != null and updateDate != ''">
                #{updateDate},
            </if>
            <if test="blogTypeId != null and blogTypeId != ''">
                #{blogTypeId},
            </if>
            <if test="blogAdminId != null and blogAdminId != ''">
                #{blogAdminId},
            </if>
            <if test="description != null and description != ''">
                #{description},
            </if>
        </trim>
    </insert>

    <insert id="saveLink" parameterType="java.util.List" useGeneratedKeys="true">
      insert into t_link (blogId, tagId) values
                                                <foreach collection="list" separator="," item="item">
                                                    (#{item.blogId}, #{item.tagId})
                                                </foreach>
    </insert>

    <select id="findAllBlog" resultType="com.holic.blog.entity.example.ShowBlogForAdmin">
      select a.title,a.recommend,a.published,a.updateDate,b.name typeName,a.id from t_blog a,t_type b where a.blogTypeId=b.id
    </select>

    <select id="findAllBlogBySearch" resultType="com.holic.blog.entity.example.ShowBlogForAdmin" parameterType="com.holic.blog.entity.example.SearchBlogForAdmin">
      select a.title,a.recommend,a.published,a.updateDate,b.name typeName,a.id from t_blog a,t_type b
      <where>
          a.blogTypeId=b.id
          <if test="title != null and title != ''">
              and title = #{title}
          </if>
          <if test="typeId != null and typeId != ''">
              and blogTypeId = #{typeId}
          </if>
          <if test="recommend != null and recommend !=''">
              and recommend=#{recommend}
          </if>
      </where>
    </select>

    <select id="countExistBlog" resultType="java.lang.Integer">
        SELECT count(*) FROM t_blog WHERE title=#{title}
    </select>

    <select id="getBlogById" resultType="com.holic.blog.entity.Blog">
        select * from t_blog where id = #{id}
    </select>

    <select id="getTagIdByBlogId" resultType="java.lang.Long">
        select tagId from t_link where blogId=#{id}
    </select>

    <select id="getAuthorByBlogId" resultType="com.holic.blog.entity.CommonUser">
        SELECT a.id,a.nickName,a.avatar FROM t_admin a,t_blog b WHERE a.id=b.blogAdminId and b.id=#{id}
    </select>

    <update id="updateBlogById" parameterType="com.holic.blog.entity.Blog">
        update t_blog a
        set a.title=#{title},a.content=#{content},a.picUrl=#{picUrl},a.source=#{source},
              a.appreciation=#{appreciation},a.copyright=#{copyright},a.recommend=#{recommend},
              a.published=#{published},a.comment=#{comment},a.updateDate=#{updateDate},a.description=#{description},
              a.blogTypeId=#{blogTypeId},a.blogAdminId=#{blogAdminId}
        where a.id=#{id}
    </update>

    <update id="updateViewTimes">
        update t_blog a set a.viewTimes = viewTimes +1 where a.id=#{id}
    </update>

    <delete id="deleteBlogById">
      delete from t_blog where id=#{id}
    </delete>

    <delete id="deleteLinkByBlogId">
        delete from t_link where blogId=#{id}
    </delete>
</mapper>

<!--
#     item表示集合中每一个元素进行迭代时的别名，separator表示在每次进行迭代之间以什么符号作为分隔 符，
#     collection属性，该属性是必须指定的，但是在不同情况 下，该属性的值是不一样的：
#     1.如果传入的是单参数且参数类型是一个List的时候，collection属性值为list
#     2.如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array
#     3.如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map
-->